\documentclass{article}
\usepackage{multirow}
\setlength\parindent{0pt}
\usepackage{geometry}
\usepackage{longtable}
\usepackage{float}

%This is word 'normal' margins
\geometry{left=1.25in,right=1in,top=1.25in,bottom=1.25in}
%word 'moderate' margins
%\geometry{left=.75in,right=.75in,top=1in,bottom=1in}
%word 'narrow' margins
%\geometry{left=.5in,right=.5in,top=.5in,bottom=.5in}



%Change title here
\title{reportRx Template}
%Change Author here
\author{Ryan Del Bel}

\begin{document}
\maketitle

<<,include=FALSE>>=
require(reportRx)
@

<<,include=FALSE>>=
#TeX<-T if final result is LaTeX file. Tex<-F if final result is .docx
TeX<-F

#load your data and call it data
#data<-read.csv() or read.table()
data<-


#Give the names of your event time and indicator here
#if coxph make a list of vectors,
#if linear or logistic make a list of strings
#response<-list(c("ETname1","EIname1"),
#           ...
#      c("ETnamen","EInamen"))
response<-

#Write the column name of k-m stratification variable
#if one exists. Leave 1 if does not exist.
# kmstrata<-c("Statification variable 1", ..., "Stratirification variable n").
# stratification will happen one at a time, not all at once.
#kmstrata<-1

#write names of univariate model stratification variable(s)
# as a vector if they exist. Leave 1 if do not
# uvstrata<-c("Statification variable 1", ..., "Stratirification variable n")
# will stratify by all variables simultaneously
#uvstrata only works for coxph but needs to be defined for any outcome. 
#set to 1 if not coxph
#uvstrata<-1

#Write names of covariates you want to include in 
#univariate models here
#uvcovs<-list(c(names of covs for outcome 1),
#                  ...
#             c(names of covs for outcome n))
#uvcovs<-

#The unit of time your outcome is in. If not months 
#write the unit here. Use lower case and plural.
#units<-"months"
#units<-


#Event time probabilities to be calculated.
#Unites are the same as 'units' above
#times<-list(c(time1, time2, ...)
#                ...
#            c(time1,time2,...))
# only required for coxph
times<-

#Write the names of the covariates you want to have in the descrpitive table
#covs<-names(data)[c(covindex)] or c("covname1","covname2",...)
covs<-

#Write the name of the covariate you want to stratify by in the
#descriptive table. Leave NULL if dont want to stratify
#maincov<-"maincovname"
maincov<-NULL

#If some of your covariates are only defined on a subset of people
#Then write the number of people you expect to have the covariate
#for the full sample, and each strata in a named list i.e.
#Default is NULL
#numobs<-list("covname1"=c(),"covname2"=c())
#numobs<-NULL

#Give the multivariate models here
#mvm<-list(list(coxph function calls for outcome 1),
#          list(coxph function calls for outcome 2))
#mvm<-
@

\section*{1 Clinical Summary}

Write introduction here

\subsection*{1.1 Clinical Covariate Summary}
<<,results='asis',echo=FALSE>>=
cat(lbld("Table 1.1:")," Clinical Covariate Summary - Stratified by ",sanitizestr(nicename(maincov)),"\n")
pcovsum(data,covs,maincov,numobs,latex=TeX)
@



\section*{2 Event Outcome Summary}

Write outcome definitions here


<<,results='asis',echo=FALSE,warning=FALSE,message=FALSE,fig.width=4.5,fig.height=4.5,fig.show='asis',fig.align='center',dpi=144>>=
  for(i in 1:length(response)){
    if(!is.null(kmstrata)){nevents<-paste(" #Events=",length(data[,response[[i]][[2]]][data[,response[[i]][[2]]]==1]),sep="")
    }else{nevents=""}
    cat(paste("\\subsection*{2.",i," ",response[[i]][2],sanitizestr(nevents), "}",sep=""),"\n")
    for(j in 1:length(kmstrata)){
    plotkm(data,response[[i]],kmstrata[j],units=units)
    petsum(data,response[[i]],kmstrata[j],times[[i]],units)
    }
  }
cat("\\newpage")
@

\section*{3 Univariate Analysis}
<<,echo=FALSE,results='asis',warning=FALSE>>=
  for(i in 1:length(response)){
    cat(paste("\\subsection*{3.",i," ",response[[i]][length(response[[i]])],"}",sep=""),"\n")
    puvsum(response[[i]],uvcovs[[i]],data,strata=uvstrata,latex=TeX)
    
  }
@

\section*{4 Multivariate Analysis}

<<,echo=FALSE,results='asis',warning=FALSE>>=
  for(i in seq_len(length(mvm))){
    cat(paste("\\subsection*{4.",i," ",response[[i]][2],"}",sep=""),"\n")
    for(j in seq_len(length(mvm[[i]]))){
      cat(paste("\\subsubsection*{4.",i,".",j, " Model ",j,": n=",summary(mvm[[i]][[j]])$n,sanitizestr(", #Events="),summary(mvm[[i]][[j]])$nevent,"}",sep=""))
      pmvsum(mvm[[i]][[j]],data)
    }
  }
@


<<,include=FALSE>>=
#makedocx<-
@
\end{document}